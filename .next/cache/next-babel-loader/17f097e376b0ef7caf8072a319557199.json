{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Strapi\\\\my-project\\\\pages\\\\login.js\";\nvar __jsx = React.createElement;\nimport React, { useRef } from 'react';\nimport Router from 'next/router';\nconst endpoint = 'http://localhost:1337/auth/local/';\nexport default (() => {\n  const loginRef = useRef();\n  const pwdRef = useRef();\n  const [error, setError] = userState();\n\n  const login = async () => {\n    const identifier = loginRef.current.value;\n    const password = pwdRef.current.value;\n\n    try {\n      const {\n        jwt,\n        user\n      } = await fetch(endpoint, {\n        method: 'POST',\n        headers: {\n          'Content-type': 'application/json'\n        },\n        body: JSON.stringify({\n          identifier,\n          password\n        })\n      }).then(res => {\n        if (res.status !== 200) {\n          throw new Error(`Error Loggin In, Non 200 Status code received!`);\n        }\n\n        return res.json();\n      });\n      window.sessionStorage.setItem('jwt', jwt);\n      window.sessionStorage.setItem('user', JSON.stringify(user));\n      Router.push('/'); //Basically we can redirect user to a specific page after authentication .\n    } catch (e) {\n      setError(e.toString());\n    }\n  };\n\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      width: 300\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, __jsx(\"input\", {\n    type: \"text\",\n    placeholder: \"Login\",\n    ref: loginRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), __jsx(\"input\", {\n    type: \"password\",\n    placeholder: \"Password\",\n    ref: pwdRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), __jsx(\"button\", {\n    onClick: () => login(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \" Login \")), error & __jsx(\"div\", {\n    style: {\n      border: '1px red solid'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, error));\n});","map":{"version":3,"sources":["C:/Users/user/Desktop/Strapi/my-project/pages/login.js"],"names":["React","useRef","Router","endpoint","loginRef","pwdRef","error","setError","userState","login","identifier","current","value","password","jwt","user","fetch","method","headers","body","JSON","stringify","then","res","status","Error","json","window","sessionStorage","setItem","push","e","toString","display","flexDirection","width","border"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,MAAMC,QAAQ,GAAG,mCAAjB;AAEA,gBAAc,MAAK;AACf,QAAMC,QAAQ,GAAGH,MAAM,EAAvB;AACA,QAAMI,MAAM,GAAGJ,MAAM,EAArB;AAGA,QAAM,CAACK,KAAD,EAAOC,QAAP,IAAmBC,SAAS,EAAlC;;AAGA,QAAMC,KAAK,GAAG,YAAW;AACrB,UAAMC,UAAU,GAAGN,QAAQ,CAACO,OAAT,CAAiBC,KAApC;AACA,UAAMC,QAAQ,GAAGR,MAAM,CAACM,OAAP,CAAeC,KAAhC;;AACA,QAAG;AACH,YAAM;AAACE,QAAAA,GAAD;AAAKC,QAAAA;AAAL,UAAa,MAAMC,KAAK,CAACb,QAAD,EAAU;AACpCc,QAAAA,MAAM,EAAE,MAD4B;AAEpCC,QAAAA,OAAO,EAAC;AACJ,0BAAiB;AADb,SAF4B;AAKpCC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBX,UAAAA,UADiB;AAEjBG,UAAAA;AAFiB,SAAf;AAL8B,OAAV,CAAL,CAStBS,IATsB,CAShBC,GAAG,IAAG;AACX,YAAIA,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAuB;AACnB,gBAAM,IAAIC,KAAJ,CAAW,gDAAX,CAAN;AACH;;AACD,eAAOF,GAAG,CAACG,IAAJ,EAAP;AACH,OAdwB,CAAzB;AAeAC,MAAAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,CAA8B,KAA9B,EAAoCf,GAApC;AACAa,MAAAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,CAA8B,MAA9B,EAAqCT,IAAI,CAACC,SAAL,CAAeN,IAAf,CAArC;AAEDb,MAAAA,MAAM,CAAC4B,IAAP,CAAY,GAAZ,EAnBI,CAmBc;AAChB,KApBD,CAoBE,OAAMC,CAAN,EAAQ;AACNxB,MAAAA,QAAQ,CAACwB,CAAC,CAACC,QAAF,EAAD,CAAR;AAEH;AACR,GA3BG;;AA6BH,SACI,4BACJ;AAAK,IAAA,KAAK,EAAE;AAACC,MAAAA,OAAO,EAAC,MAAT;AAAiBC,MAAAA,aAAa,EAAE,QAAhC;AAA0CC,MAAAA,KAAK,EAAC;AAAhD,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACD;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,WAAW,EAAC,OAA/B;AAAwC,IAAA,GAAG,EAAG/B,QAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADC,EAED;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,WAAW,EAAC,UAAnC;AAA8C,IAAA,GAAG,EAAEC,MAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFC,EAGD;AAAQ,IAAA,OAAO,EAAG,MAAMI,KAAK,EAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHC,CADI,EAMHH,KAAK,GAAG;AAAK,IAAA,KAAK,EAAE;AAAC8B,MAAAA,MAAM,EAAC;AAAR,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuC9B,KAAvC,CANL,CADJ;AAUA,CA/CD","sourcesContent":["import React, { useRef } from 'react';\r\nimport Router from 'next/router';\r\nconst endpoint = 'http://localhost:1337/auth/local/';\r\n\r\nexport default() =>{\r\n    const loginRef = useRef();\r\n    const pwdRef = useRef();\r\n\r\n\r\n    const [error,setError] = userState();\r\n\r\n\r\n    const login = async() => {\r\n        const identifier = loginRef.current.value;\r\n        const password = pwdRef.current.value;\r\n        try{\r\n        const {jwt,user} = await fetch(endpoint,{\r\n            method: 'POST',\r\n            headers:{\r\n                'Content-type' : 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                identifier,\r\n                password,\r\n            }),\r\n        }).then( res=> {\r\n            if (res.status !== 200){\r\n                throw new Error(`Error Loggin In, Non 200 Status code received!`);\r\n            }\r\n            return res.json();\r\n        });\r\n        window.sessionStorage.setItem('jwt',jwt);\r\n        window.sessionStorage.setItem('user',JSON.stringify(user));\r\n    \r\n       Router.push('/'); //Basically we can redirect user to a specific page after authentication .\r\n        } catch(e){\r\n            setError(e.toString());\r\n\r\n        }\r\n};\r\n \r\n return(\r\n     <>\r\n <div style={{display:'flex', flexDirection: 'column', width:300}}>\r\n<input type=\"text\" placeholder=\"Login\"  ref= {loginRef} />\r\n<input type=\"password\" placeholder=\"Password\" ref={pwdRef} />\r\n<button onClick={ () => login()}> Login </button>\r\n</div> \r\n {error & <div style={{border:'1px red solid'}}>{error}</div>}\r\n</>\r\n  );\r\n};"]},"metadata":{},"sourceType":"module"}