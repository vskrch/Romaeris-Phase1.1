{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Strapi\\\\my-project\\\\pages\\\\login.js\";\nvar __jsx = React.createElement;\nimport Router from 'next/router';\nimport React, { useRef, useState } from 'react';\nconst endpoint = 'http://localhost:1337/auth/local';\nexport default (() => {\n  const loginRef = useRef();\n  const pwdRef = useRef();\n  const {\n    0: error,\n    1: setError\n  } = useState('');\n\n  const login = async () => {\n    const identifier = loginRef.current.value;\n    const password = pwdRef.current.value;\n\n    try {\n      const {\n        jwt,\n        user\n      } = await fetch(endpoint, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          identifier,\n          password\n        })\n      }).then(res => {\n        if (res.status !== 200) {\n          throw new Error('Error logging in, non 200 code');\n        }\n\n        return res.json();\n      });\n      window.sessionStorage.setItem('jwt', jwt);\n      window.sessionStorage.setItem('user', JSON.stringify(user));\n      Router.push('/');\n    } catch (e) {\n      setError(e.toString());\n    }\n  };\n\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      width: 300\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, __jsx(\"input\", {\n    type: \"text\",\n    placeholder: \"Username or email\",\n    ref: loginRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), __jsx(\"input\", {\n    type: \"password\",\n    placeholder: \"Password\",\n    ref: pwdRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), __jsx(\"button\", {\n    onClick: () => login(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"Login\")), error && __jsx(\"div\", {\n    style: {\n      border: '1px red solid'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, error));\n});","map":{"version":3,"sources":["C:/Users/user/Desktop/Strapi/my-project/pages/login.js"],"names":["Router","React","useRef","useState","endpoint","loginRef","pwdRef","error","setError","login","identifier","current","value","password","jwt","user","fetch","method","headers","body","JSON","stringify","then","res","status","Error","json","window","sessionStorage","setItem","push","e","toString","display","flexDirection","width","border"],"mappings":";;AAAA,OAAOA,MAAP,MAAmB,aAAnB;AACA,OAAOC,KAAP,IAAeC,MAAf,EAAuBC,QAAvB,QAAsC,OAAtC;AAEA,MAAMC,QAAQ,GAAG,kCAAjB;AAEA,gBAAe,MAAM;AACnB,QAAMC,QAAQ,GAAGH,MAAM,EAAvB;AACA,QAAMI,MAAM,GAAGJ,MAAM,EAArB;AACA,QAAM;AAAA,OAACK,KAAD;AAAA,OAAQC;AAAR,MAAoBL,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMM,KAAK,GAAG,YAAY;AACxB,UAAMC,UAAU,GAAGL,QAAQ,CAACM,OAAT,CAAiBC,KAApC;AACA,UAAMC,QAAQ,GAAGP,MAAM,CAACK,OAAP,CAAeC,KAAhC;;AAEA,QAAI;AACF,YAAM;AAACE,QAAAA,GAAD;AAAMC,QAAAA;AAAN,UAAc,MAAMC,KAAK,CAACZ,QAAD,EAAW;AACxCa,QAAAA,MAAM,EAAE,MADgC;AAExCC,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT,SAF+B;AAKxCC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBX,UAAAA,UADmB;AAEnBG,UAAAA;AAFmB,SAAf;AALkC,OAAX,CAAL,CASvBS,IATuB,CASlBC,GAAG,IAAI;AACb,YAAIA,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAwB;AACtB,gBAAM,IAAIC,KAAJ,CAAU,gCAAV,CAAN;AACD;;AACD,eAAOF,GAAG,CAACG,IAAJ,EAAP;AACD,OAdyB,CAA1B;AAgBAC,MAAAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,CAA8B,KAA9B,EAAqCf,GAArC;AACAa,MAAAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,CAA8B,MAA9B,EAAsCT,IAAI,CAACC,SAAL,CAAeN,IAAf,CAAtC;AAEAf,MAAAA,MAAM,CAAC8B,IAAP,CAAY,GAAZ;AACD,KArBD,CAqBE,OAAOC,CAAP,EAAU;AACVvB,MAAAA,QAAQ,CAACuB,CAAC,CAACC,QAAF,EAAD,CAAR;AACD;AACF,GA5BD;;AA8BA,SACE,4BACE;AAAK,IAAA,KAAK,EAAE;AAACC,MAAAA,OAAO,EAAE,MAAV;AAAkBC,MAAAA,aAAa,EAAE,QAAjC;AAA2CC,MAAAA,KAAK,EAAE;AAAlD,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,WAAW,EAAC,mBAA/B;AAAmD,IAAA,GAAG,EAAE9B,QAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,WAAW,EAAC,UAAnC;AAA8C,IAAA,GAAG,EAAEC,MAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE;AAAQ,IAAA,OAAO,EAAE,MAAMG,KAAK,EAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAHF,CADF,EAMGF,KAAK,IAAI;AAAK,IAAA,KAAK,EAAE;AAAC6B,MAAAA,MAAM,EAAE;AAAT,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwC7B,KAAxC,CANZ,CADF;AAUD,CA7CD","sourcesContent":["import Router from 'next/router';\r\nimport React, {useRef, useState} from 'react';\r\n\r\nconst endpoint = 'http://localhost:1337/auth/local';\r\n\r\nexport default () => {\r\n  const loginRef = useRef();\r\n  const pwdRef = useRef();\r\n  const [error, setError] = useState('');\r\n\r\n  const login = async () => {\r\n    const identifier = loginRef.current.value;\r\n    const password = pwdRef.current.value;\r\n\r\n    try {\r\n      const {jwt, user} = await fetch(endpoint, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          identifier,\r\n          password,\r\n        }),\r\n      }).then(res => {\r\n        if (res.status !== 200) {\r\n          throw new Error('Error logging in, non 200 code');\r\n        }\r\n        return res.json();\r\n      });\r\n\r\n      window.sessionStorage.setItem('jwt', jwt);\r\n      window.sessionStorage.setItem('user', JSON.stringify(user));\r\n\r\n      Router.push('/');\r\n    } catch (e) {\r\n      setError(e.toString());\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div style={{display: 'flex', flexDirection: 'column', width: 300}}>\r\n        <input type=\"text\" placeholder=\"Username or email\" ref={loginRef} />\r\n        <input type=\"password\" placeholder=\"Password\" ref={pwdRef} />\r\n        <button onClick={() => login()}>Login</button>\r\n      </div>\r\n      {error && <div style={{border: '1px red solid'}}>{error}</div>}\r\n    </>\r\n  );\r\n};"]},"metadata":{},"sourceType":"module"}